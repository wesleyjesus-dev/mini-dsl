// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Nebula.Ast
{

    using global::System;
    using global::System.Collections.Generic;
    using global::Google.FlatBuffers;

    public struct Scaffold : IFlatbufferObject
    {
        private Table __p;
        public ByteBuffer ByteBuffer { get { return __p.bb; } }
        public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
        public static Scaffold GetRootAsScaffold(ByteBuffer _bb) { return GetRootAsScaffold(_bb, new Scaffold()); }
        public static Scaffold GetRootAsScaffold(ByteBuffer _bb, Scaffold obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
        public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
        public Scaffold __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

        public Nebula.Ast.Widget? AppBar { get { int o = __p.__offset(4); return o != 0 ? (Nebula.Ast.Widget?)(new Nebula.Ast.Widget()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
        public Nebula.Ast.Widget? Body { get { int o = __p.__offset(6); return o != 0 ? (Nebula.Ast.Widget?)(new Nebula.Ast.Widget()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

        public static Offset<Nebula.Ast.Scaffold> CreateScaffold(FlatBufferBuilder builder,
            Offset<Nebula.Ast.Widget> app_barOffset = default(Offset<Nebula.Ast.Widget>),
            Offset<Nebula.Ast.Widget> bodyOffset = default(Offset<Nebula.Ast.Widget>))
        {
            builder.StartTable(2);
            Scaffold.AddBody(builder, bodyOffset);
            Scaffold.AddAppBar(builder, app_barOffset);
            return Scaffold.EndScaffold(builder);
        }

        public static void StartScaffold(FlatBufferBuilder builder) { builder.StartTable(2); }
        public static void AddAppBar(FlatBufferBuilder builder, Offset<Nebula.Ast.Widget> appBarOffset) { builder.AddOffset(0, appBarOffset.Value, 0); }
        public static void AddBody(FlatBufferBuilder builder, Offset<Nebula.Ast.Widget> bodyOffset) { builder.AddOffset(1, bodyOffset.Value, 0); }
        public static Offset<Nebula.Ast.Scaffold> EndScaffold(FlatBufferBuilder builder)
        {
            int o = builder.EndTable();
            return new Offset<Nebula.Ast.Scaffold>(o);
        }
    }


    static public class ScaffoldVerify
    {
        static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
        {
            return verifier.VerifyTableStart(tablePos)
              && verifier.VerifyTable(tablePos, 4 /*AppBar*/, Nebula.Ast.WidgetVerify.Verify, false)
              && verifier.VerifyTable(tablePos, 6 /*Body*/, Nebula.Ast.WidgetVerify.Verify, false)
              && verifier.VerifyTableEnd(tablePos);
        }
    }

}
