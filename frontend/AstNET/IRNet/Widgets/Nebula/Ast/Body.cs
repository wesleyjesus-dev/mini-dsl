// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Nebula.Ast
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct Body : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static Body GetRootAsBody(ByteBuffer _bb) { return GetRootAsBody(_bb, new Body()); }
  public static Body GetRootAsBody(ByteBuffer _bb, Body obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Body __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Nebula.Ast.Widget? Content { get { int o = __p.__offset(4); return o != 0 ? (Nebula.Ast.Widget?)(new Nebula.Ast.Widget()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public Nebula.Ast.Widget? Button { get { int o = __p.__offset(6); return o != 0 ? (Nebula.Ast.Widget?)(new Nebula.Ast.Widget()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<Nebula.Ast.Body> CreateBody(FlatBufferBuilder builder,
      Offset<Nebula.Ast.Widget> contentOffset = default(Offset<Nebula.Ast.Widget>),
      Offset<Nebula.Ast.Widget> buttonOffset = default(Offset<Nebula.Ast.Widget>)) {
    builder.StartTable(2);
    Body.AddButton(builder, buttonOffset);
    Body.AddContent(builder, contentOffset);
    return Body.EndBody(builder);
  }

  public static void StartBody(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddContent(FlatBufferBuilder builder, Offset<Nebula.Ast.Widget> contentOffset) { builder.AddOffset(0, contentOffset.Value, 0); }
  public static void AddButton(FlatBufferBuilder builder, Offset<Nebula.Ast.Widget> buttonOffset) { builder.AddOffset(1, buttonOffset.Value, 0); }
  public static Offset<Nebula.Ast.Body> EndBody(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Nebula.Ast.Body>(o);
  }
}


static public class BodyVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyTable(tablePos, 4 /*Content*/, Nebula.Ast.WidgetVerify.Verify, false)
      && verifier.VerifyTable(tablePos, 6 /*Button*/, Nebula.Ast.WidgetVerify.Verify, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
